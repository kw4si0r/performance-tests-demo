plugins {
    id 'idea'
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.openapi.generator' version '7.0.1'
}

group = 'pl.demo'
version = '0.0.1-SNAPSHOT'


java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    mapstructVersion = '1.5.5.Final'
    lombokVersion = '1.18.30'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'


    implementation 'org.hibernate:hibernate-jpamodelgen:6.2.3.Final'
    annotationProcessor 'org.hibernate:hibernate-jpamodelgen:6.2.3.Final' //for metamodel generation

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    implementation 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    implementation 'org.hibernate.validator:hibernate-validator'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation 'org.hibernate:hibernate-jpamodelgen:6.2.3.Final'
    annotationProcessor 'org.hibernate:hibernate-jpamodelgen:6.2.3.Final'

    implementation 'ch.qos.logback:logback-classic:1.4.7'
    implementation 'net.logstash.logback:logstash-logback-encoder:7.3'
    testImplementation 'org.slf4j:slf4j-api:2.0.7'

    implementation 'org.apache.commons:commons-lang3:+'

    implementation 'org.hsqldb:hsqldb:2.5.2'

    // Swagger UI swagger-ui/index.html
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-api:2.2.0'
    implementation 'io.swagger.core.v3:swagger-annotations-jakarta:2.2.16'
    implementation 'javax.servlet:javax.servlet-api:4.0.1'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    // OpenAPI
    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'

    // Cache
    implementation 'com.github.ben-manes.caffeine:caffeine:3.1.8'

    // Metrics
    implementation "io.micrometer:micrometer-registry-prometheus"

    testImplementation "org.assertj:assertj-core:3.25.1"
}


tasks.named('test') {
    useJUnitPlatform()
}


//add here additional swaggers  - key is package name, value is path to swagger
def openapiSpecs = [
        "details": [
                "path"                          : "src/main/resources/api/userdetails-v0.0.1.yml",
                "additionalModelTypeAnnotations": '@lombok.Builder'
        ]
]

openapiSpecs.each { key, value ->
    tasks.create("openApiGenerate-${key}", org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
        generatorName = "spring"
        inputSpec = "$rootDir/${value.path}"
        outputDir = "$buildDir/generated/api"
        modelPackage = "pl.demo.loadtests.api.generated.${key}.model"

        configOptions = [
                "interfaceOnly"                 : "true",
                "dateLibrary"                   : "java8",
                "additionalModelTypeAnnotations": "${value.additionalModelTypeAnnotations}"
        ]
        typeMappings = ['string+date-time': 'LocalDateTime', 'date': 'LocalDate']
        importMappings.set(LocalDateTime: "java.time.LocalDateTime")
        sourceSets.getByName(SourceSet.MAIN_SOURCE_SET_NAME).java.srcDir("$buildDir/generated/api/src")
    }
}


tasks.register("openApiGenerateAll") { dependsOn(openapiSpecs.keySet().collect { "openApiGenerate-${it}" }) }

compileJava.dependsOn tasks.openApiGenerateAll
